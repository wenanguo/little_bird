name: Docker Image CI

env:
  DOCKER_REG_API: ccr.ccs.tencentyun.com/little_bird/api
  DOCKER_REG_FRONT: ccr.ccs.tencentyun.com/little_bird/api
  REG: ccr.ccs.tencentyun.com
on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:        
        java-version: [14]

    steps:
    - uses: actions/checkout@v1
    - name: Set up java ${{ matrix.java-version }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java-version }}
    - name: Build with Maven
      run: |
        cd code && mvn -B package --file pom.xml
        
    - name: Login Docker
      run:
        echo "${{ secrets.PASSWORD }}" | docker login $REG -u "${{ secrets.USERNAME }}" --password-stdin
    - name: Build the Docker image
      run:
        cd code/web && docker build . --file Dockerfile --tag image
    - name: Push api Image
      run: |
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        # Use Docker `latest` tag convention
        [ "$VERSION" == "master" ] && VERSION=latest
        echo IMAGE_ID=$DOCKER_REG_API
        echo VERSION=$VERSION
        docker tag image $DOCKER_REG_API:$VERSION
        docker push $DOCKER_REG_API:$VERSION


